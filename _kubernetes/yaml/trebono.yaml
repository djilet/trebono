apiVersion: v1
kind: Namespace
metadata:
  annotations:
  name: ${KUBE_NAMESPACE}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
  name: ${KUBE_APPLICATION}
  namespace: ${KUBE_NAMESPACE}
spec:
  tls:
    - hosts:
        - ${KUBE_NAMESPACE}.poc-trebono-k8s.da-rz.net
      secretName: ${KUBE_APPLICATION}-tls
  rules:
    - host: ${KUBE_NAMESPACE}.poc-trebono-k8s.da-rz.net
      http:
        paths:
          - backend:
              serviceName: ${KUBE_APPLICATION}
              servicePort: 80
            path: /
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trebono-config
  namespace: ${KUBE_NAMESPACE}
data:
  TREBONO_APP_NAME: "trebono"
  TREBONO_VERSION: "0.0.2"
---
apiVersion: v1
kind: Service
metadata:
  name: ${KUBE_APPLICATION}
  namespace: ${KUBE_NAMESPACE}
spec:
  ports:
    - port: 80
  selector:
    app: ${KUBE_APPLICATION}
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${KUBE_NAMESPACE}
  name: ${KUBE_APPLICATION}
  labels:
    app: ${KUBE_APPLICATION}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: ${KUBE_APPLICATION}
  template:
    metadata:
      labels:
        app: ${KUBE_APPLICATION}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - env:
            - name: APP_DEBUG
              value: "true"
            - name: APP_ENV
              value: ${KUBE_NAMESPACE}
            - name: APP_TIMEZONE
              value: UTC
            - name: LOG_CHANNEL
              value: stdout
            - name: LOG_FORMAT
              value: |
                [%datetime%] - %level_name% - "%message%" - %context%
            - name: DB_CONNECTION
              value: trebono-db
            - name: DB_HOST
              value: trebono-db
            - name: DB_PORT
              value: "5432"
            - name: DB_MAIN_DATABASE
              value: lst_main
            - name: DB_MAIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: lst-main-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: username
            - name: DB_MAIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lst-main-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: password
            - name: DB_CONTROL_DATABASE
              value: lst_control
            - name: DB_CONTROL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: lst-control-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: username
            - name: DB_CONTROL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lst-control-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: password
            - name: DB_PERSONAL_DATABASE
              value: lst_personal
            - name: DB_PERSONAL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: lst-personal-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: username
            - name: DB_PERSONAL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lst-personal-writer-user.trebono-db.credentials.postgresql.acid.zalan.do
                  key: password
            - name: SWIFT_AUTH_URL
              value: http://poc-trebono-swift.da-rz.net:5000/v3/
            - name: SWIFT_USERNAME
              value: admin
            - name: SWIFT_PASSWORD
              value: uxlmqpdgehwv
            - name: SWIFT_REGION
              value: RegionOne
            - name: SWIFT_USER_DOMAIN_ID
              value: default
            - name: SWIFT_PROJECT_ID
              value: 563fa1c765c04ecc917c4fda6b5e54db
            - name: SWIFT_CONTAINER
              value: ${KUBE_NAMESPACE}
          envFrom:
            - configMapRef:
                name: trebono-config
          image: trebono/${KUBE_APPLICATION}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
          imagePullPolicy: IfNotPresent
          name: ${KUBE_APPLICATION}
          ports:
            - containerPort: 80
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 500m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        # - image: nginx:1.17.8
        #   imagePullPolicy: IfNotPresent
        #   name: nginx
        #   ports:
        #     - containerPort: 80
        #       protocol: TCP
        #   # livenessProbe:
        #   #   failureThreshold: 1
        #   #   httpGet:
        #   #     path: /
        #   #     port: 80
        #   #     scheme: HTTP
        #   #   periodSeconds: 100
        #   #   successThreshold: 1
        #   #   timeoutSeconds: 1
        #   readinessProbe:
        #     failureThreshold: 3
        #     # httpGet:
        #     #   path: /
        #     #   port: 80
        #     #   scheme: HTTP
        #     tcpSocket:
        #       port: 80
        #     periodSeconds: 5
        #     successThreshold: 1
        #     timeoutSeconds: 1
        #   resources:
        #     limits:
        #       cpu: 500m
        #       memory: 256Mi
        #     requests:
        #       cpu: 500m
        #       memory: 256Mi
        #   terminationMessagePath: /dev/termination-log
        #   terminationMessagePolicy: File
        #   volumeMounts:
        #     - mountPath: /etc/nginx/conf.d/default.conf
        #       name: ${KUBE_APPLICATION}-nginx-config
        #       subPath: app.conf
        #     - mountPath: /app/htdocs/index.php
        #       name: ${KUBE_APPLICATION}-nginx-webroot
        #       subPath: index.php
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      # volumes:
      #   - configMap:
      #       defaultMode: 420
      #       name: ${KUBE_APPLICATION}-nginx-config
      #     name: ${KUBE_APPLICATION}-nginx-config
      #   - configMap:
      #       defaultMode: 420
      #       name: ${KUBE_APPLICATION}-nginx-webroot
      #     name: ${KUBE_APPLICATION}-nginx-webroot
